name: Testing
on:
  push:
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: [ "3.10", "3.11" ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          # Install a specific version of uv.
          version: "0.5.4"
          enable-cache: true
          cache-dependency-glob: requirements/requirements-${{ matrix.os }}-${{ matrix.python-version }}.txt
      - name: Install dependencies
        shell: bash
        run: |
          uv venv -p ${{ matrix.python-version }}
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            source .venv/Scripts/activate
          else
            source .venv/bin/activate
          fi
          echo PATH=$PATH >> $GITHUB_ENV
          uv pip install -r requirements/requirements-${{ matrix.os }}-${{ matrix.python-version }}.txt
      - name: Install test requirements
        run: uv pip install -e .[test]
      - name: Run tests
        run: |
          uv run pytest tests/
